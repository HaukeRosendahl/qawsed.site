---
import { faker } from "@faker-js/faker";
import Layout from '../layouts/Layout.astro';
import Card from '../components/Card.astro';
interface Student {
	title: string;
	description: string;
	authors: { name: string; github: string }[],
	url: string;
	source: string
}
const dataset = {
	q: ["Quantum", "Quantitive", "Query"],
	a: ["Async", "Automatic", "Autonomous"],
	w: ["Wild", "Wobbely", "Wired"],
	s: ["Supercharge", "Steroids", "Simple"],
	e: ["Explore", "Endangered"],
	d: ["Documentation"],
}
const acronym = (Object.keys(dataset)).map((key) => dataset[key][Math.floor(Math.random() * dataset[key].length)]);//?
const createStudent = () => {
	return {
		title: faker.word.noun(),
		description: faker.lorem.paragraph(),
		authors: [{
			name: faker.internet.userName(),
			github: faker.internet.emoji()
		}],
		source: "https://github.com/ff6347",
		url: faker.internet.url(),
	}

}
const projects: Student[] = [];
for (let i = 0; i < 10; i++) {
	projects.push(createStudent());
}

---



<Layout title="q.a.w.s.e.d.site">
	<div class="overlay text-8xl font-black"><div class="overlay-content"></div></div>
	<main>
		<h1 class="text-2xl pb-1">Welcome to <span class="text-gradient">qawsed.site</span></h1>
		<h2 class="text-xl font-semibold pb-5">The: {acronym.join(" ")}</h2>
		<p>
			Totally inspired by <a class="instructions" href="https://tholman.com/">Tim Holmans</a> <a  class="instructions" href="https://theuselessweb.com/">"The Useless Web"</a>
		</p>
		<div class="link-card-grid">
			{projects.map(project => <Card title={project.title} body={project.description} href={project.url}/>)}
		</div>
	</main>
	<footer>
		<div><span>The end</span></div>
	</footer>
	<script is:inline>
		document.addEventListener("DOMContentLoaded",()=>{
			const overlay = document.querySelector(".overlay-content");
			const countdown = [5,4,3,"▲","△", "<⤵︎>", "Ready?", "GO!","Now!!"];
			let counter = 0;
			const interval = setInterval(()=>{
				const content = countdown[counter];
				overlay.innerText = content;
				counter++;
				if(counter=== countdown.length){
					clearInterval(interval);
				}
			}, 500);
			setTimeout(()=>{
				const overlay = document.querySelector(".overlay");
				overlay.remove()
			},5000)
		})
	</script>
	<script is:inline>
		document.addEventListener('DOMContentLoaded', () => {
			const gridElements = document.querySelector(".link-card-grid");
			for(let i = gridElements.length - 1; i >= 0; i--) {
				gridElements.appendChild(gridElements.chldren[Math.random() * i | 0 ])
			}
		});
	</script>
</Layout>

<style is:global>
		:root {
		--primary-color: #4F39FA;
		--secondary-color: #DA62C4;
		--text-on-dark-color: #fffdd8;
		--astro-gradient: linear-gradient(0deg, var(--primary-color),var(--secondary-color));
	}
	</style>
<style>



	h1 {
		margin: 2rem 0 0 0;
	}
	main {

		margin: auto;
		/* padding: 1em; */
		max-width: 60ch;
	}

	.text-gradient {
		font-weight: 900;
		background-image: var(--astro-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-size: 100% 200%;
		background-position-y: 100%;
		border-radius: 0.4rem;
		animation: pulse 4s ease-in-out infinite;
	}

	footer {
		margin-top: 10rem;
		height: 120rem;
		background-color: var(--primary-color);
		width: 100%;
		border-top: 1rem solid var(--secondary-color);
		display: flex;
		align-items: center;
		justify-content: flex-end;
		padding: 1rem;
	}
	footer > div {

		justify-content: flex-end;
		align-self: flex-end;
		color: var(--text-on-dark-color);
		text-transform:uppercase;
	}

	.overlay {
    background-color:var(--text-on-dark-color);
    width:100%;
    height:100%;
    z-index:10;
    top:0;
    left:0;
    position:fixed;
		animation: fadeout 0.1s ease-in 5s forwards;
		animation-fill-mode: forwards;
		display:flex;
		justify-content:center;



	}
	.overlay-content{
		align-self: center;
	}
	@keyframes fadeout {
    to {
			opacity: 0;
        /* width:0;
        height:0;
        overflow:hidden; */
    }
}
	@keyframes pulse {

		0%,
		100% {
			background-position-y: 0%;
		}

		50% {
			background-position-y: 80%;
		}
	}

	.instructions {
		line-height: 1.6;
		margin: 1rem 0;
		background: var(--primary-color);
		padding: 1.0rem;
		border-radius: 0.4rem;
		color: var(--color-bg);
	}

	.instructions code {
		font-size: 0.875em;
		border: 0.1em solid var(--color-border);
		border-radius: 4px;
		padding: 0.15em 0.25em;
	}

	.link-card-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
		gap: 0rem;
		padding: 0;
	}
</style>